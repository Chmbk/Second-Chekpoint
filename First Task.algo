// Function to calculate the dot product of two vectors
function dot_product(v1, v2) {
  if (v1.length !== v2.length) {
    throw new Error("Vectors must have the same dimension.");
  }

  let result = 0;
  for (let i = 0; i < v1.length; i++) {
    result += v1[i] * v2[i];
  }
  return result;
}

// Function to determine if two vectors are orthogonal
function areVectorsOrthogonal(v1, v2) {
  const dotProduct = dot_product(v1, v2);
  return dotProduct === 0;
}

// Function to check if n pairs of vectors are orthogonal
function arePairsOrthogonal(vectorPairs) {
  const results = [];
  for (const pair of vectorPairs) {
    if (pair.length !== 2) {
      throw new Error("Each pair should contain exactly two vectors.");
    }

    const v1 = pair[0];
    const v2 = pair[1];

    const isOrthogonal = areVectorsOrthogonal(v1, v2);
    results.push(isOrthogonal);
  }
  return results;
}

// Example usage:
const vectorPairs = [
  [[1, 0], [0, 1]],
  [[1, 2], [4, 5]],
  [[1, -1], [0, 0]]
];

const orthogonalResults = arePairsOrthogonal(vectorPairs);
console.log("Orthogonal Results: " + orthogonalResults);